default world runtime {

     export runtime-app : interface {
        genesis : func()
        call : func(service : u64, method : u64, call-data : list<u8>)
        query : func(service : u64, method : u64, query-data : list<u8>) -> list<u8>
        descriptor : func() -> list<u8>
    }

    import execution-context : interface {
        value : func() -> u64
        block-level : func() -> u32
        sender : func() -> list<u8>
        network : func() -> u32
        sender-pk : func() -> list<u8>
    }
}
