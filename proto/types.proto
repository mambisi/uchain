syntax = "proto3";
package uchain.types;
message Empty {}

message BlockHeader {
  bytes parent_hash = 1;
  bytes receipt_hash = 2;
  bytes merkle_root = 3;
  bytes state_root = 4;
  bytes mix_nonce = 5;
  bytes coinbase = 6;
  uint32 difficulty = 7;
  uint32 chain_id = 8;
  uint32 level = 9;
  uint32 time = 10;
  uint64 nonce = 11;
}

message Block {
  bytes hash = 1;
  BlockHeader header = 2;
  repeated SignedTransaction txs = 3;
}

message PaymentTx {
  bytes to = 1;
  uint64 amount = 2;
}

message ApplicationCallTx{
  uint32 app_id = 1;
  bytes args = 2;
}

message Transaction {
  uint64 nonce = 1;
  uint32 chain_id = 2;
  bytes genesis_hash = 3;
  uint64 fee = 4;
  oneof data {
    PaymentTx payment = 5;
    ApplicationCallTx call = 6;
    string raw = 7;
  }
}
message Receipt {
  uint32 app_id = 1;
  uint32 tx_hash = 2;
  repeated bytes logs = 3;
  uint32 fuel_used = 4;
}

message SignedTransaction {
  uint64 nonce = 1;
  uint32 chain_id = 2;
  bytes genesis_hash = 3;
  uint64 fee = 4;
  oneof data {
    PaymentTx payment = 5;
    ApplicationCallTx call = 6;
    bytes raw = 7;
  }
  bytes r = 8;
  bytes s = 9;
  uint32 v = 10;
}

message TransactionList {
  repeated SignedTransaction txs = 1;
}

message AccountState {
  uint64 free_balance = 1;
  uint64 reserve_balance = 2;
  uint64 nonce = 3;
}

enum TransactionStatus {
  Confirmed = 0;
  Pending = 1;
  Queued = 2;
  NotFound = 3;
}