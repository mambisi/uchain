syntax = "proto3";
import "primitive_types.proto";
package odana.types;

message BlockHeader {
  odana.primitive_types.H256 parent_hash = 1;
  odana.primitive_types.H256 receipt_hash = 2;
  odana.primitive_types.H256 tx_root = 3;
  odana.primitive_types.H256 state_root = 4;
  odana.primitive_types.U256 mix_nonce = 5;
  odana.primitive_types.Address coinbase = 6;
  uint32 difficulty = 7;
  uint32 chain_id = 8;
  uint32 level = 9;
  uint32 time = 10;
  uint64 nonce = 11;
}

message Block {
  BlockHeader header = 1;
  repeated SignedTransaction txs = 2;
}

message AppState {
  odana.primitive_types.H256 root_hash = 1;
  odana.primitive_types.H256 code_hash = 2;
  odana.primitive_types.Address creator = 3;
  uint32 version = 4;
}

message PaymentTx {
  odana.primitive_types.Address address = 1;
}

message ApplicationCall{
  odana.primitive_types.Address app_id = 1;
  uint64 service = 2;
  uint64 method = 3;
  bytes args = 4;
}

message CreateApplication{
  string package_name = 1;
  bytes binary = 2;
}

message UpdateApplication{
  odana.primitive_types.Address app_id = 1;
  bytes binary = 2;
  bool migrate = 3;
}

message Transaction {
  uint64 nonce = 1;
  uint32 chain_id = 2;
  odana.primitive_types.H256 genesis_hash = 3;
  uint64 tip = 4;
  uint64 value = 5;
  oneof data {
    PaymentTx payment = 6;
    ApplicationCall call = 7;
    CreateApplication create = 8;
    UpdateApplication update = 9;
    string raw = 10;
  }
}
message Receipt {
  odana.primitive_types.Address app_id = 1;
  odana.primitive_types.H256 tx_hash = 2;
  repeated bytes logs = 3;
  uint32 fuel_used = 4;
  odana.primitive_types.H256 post_state = 5;
  bool status = 6;
}

message SignedTransaction {
  Transaction tx = 1;
  odana.primitive_types.H256 r = 2;
  odana.primitive_types.H256 s = 3;
  uint32 v = 4;
}

message TransactionList {
  repeated SignedTransaction txs = 1;
}

message AccountState {
  uint64 free_balance = 1;
  uint64 reserve_balance = 2;
  uint64 nonce = 3;
  AppState app_state = 4;
}

enum TransactionStatus {
  Confirmed = 0;
  Pending = 1;
  Queued = 2;
  NotFound = 3;
}